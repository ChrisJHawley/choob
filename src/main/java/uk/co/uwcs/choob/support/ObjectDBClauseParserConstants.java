/* Generated By:JJTree&JavaCC: Do not edit this line. ObjectDBClauseParserConstants.java */
package uk.co.uwcs.choob.support;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ObjectDBClauseParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int P_FLOATVALUE = 4;
  /** RegularExpression Id. */
  int P_INTVALUE = 5;
  /** RegularExpression Id. */
  int P_TEXTVALUE = 6;
  /** RegularExpression Id. */
  int P_BACKTICKINNER = 7;
  /** RegularExpression Id. */
  int P_NAME = 8;
  /** RegularExpression Id. */
  int K_WHERE = 9;
  /** RegularExpression Id. */
  int K_SORT = 10;
  /** RegularExpression Id. */
  int K_LIMIT = 11;
  /** RegularExpression Id. */
  int K_WITH = 12;
  /** RegularExpression Id. */
  int K_FROM = 13;
  /** RegularExpression Id. */
  int K_SET = 14;
  /** RegularExpression Id. */
  int K_TABLE = 15;
  /** RegularExpression Id. */
  int K_INTO = 16;
  /** RegularExpression Id. */
  int K_SELECT = 17;
  /** RegularExpression Id. */
  int K_INSERT = 18;
  /** RegularExpression Id. */
  int K_DELETE = 19;
  /** RegularExpression Id. */
  int K_UPDATE = 20;
  /** RegularExpression Id. */
  int OPENBRACKET = 21;
  /** RegularExpression Id. */
  int CLOSEBRACKET = 22;
  /** RegularExpression Id. */
  int K_NOT = 23;
  /** RegularExpression Id. */
  int K_AND = 24;
  /** RegularExpression Id. */
  int K_OR = 25;
  /** RegularExpression Id. */
  int K_ASC = 26;
  /** RegularExpression Id. */
  int K_DESC = 27;
  /** RegularExpression Id. */
  int K_INTEGER = 28;
  /** RegularExpression Id. */
  int K_RANDOM = 29;
  /** RegularExpression Id. */
  int K_AS = 30;
  /** RegularExpression Id. */
  int K_0FUNC = 31;
  /** RegularExpression Id. */
  int K_1FUNC = 32;
  /** RegularExpression Id. */
  int K_2FUNC = 33;
  /** RegularExpression Id. */
  int K_3FUNC = 34;
  /** RegularExpression Id. */
  int K_LESS = 35;
  /** RegularExpression Id. */
  int K_GREATER = 36;
  /** RegularExpression Id. */
  int K_EQUAL = 37;
  /** RegularExpression Id. */
  int K_NOTEQUAL = 38;
  /** RegularExpression Id. */
  int K_RLIKE = 39;
  /** RegularExpression Id. */
  int K_LIKE = 40;
  /** RegularExpression Id. */
  int K_ADD = 41;
  /** RegularExpression Id. */
  int K_SUBTRACT = 42;
  /** RegularExpression Id. */
  int K_MULTIPLY = 43;
  /** RegularExpression Id. */
  int K_DIVIDE = 44;
  /** RegularExpression Id. */
  int COMMA = 45;
  /** RegularExpression Id. */
  int K_ISINT = 46;
  /** RegularExpression Id. */
  int K_ISFLOAT = 47;
  /** RegularExpression Id. */
  int K_ISSTR = 48;
  /** RegularExpression Id. */
  int K_ISBOOL = 49;
  /** RegularExpression Id. */
  int IDNAME = 50;
  /** RegularExpression Id. */
  int QIDNAME = 51;
  /** RegularExpression Id. */
  int FIELDNAME = 52;
  /** RegularExpression Id. */
  int QFIELDNAME = 53;
  /** RegularExpression Id. */
  int TEXTVALUE = 54;
  /** RegularExpression Id. */
  int FLOATVALUE = 55;
  /** RegularExpression Id. */
  int INTVALUE = 56;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\t\"",
    "<P_FLOATVALUE>",
    "<P_INTVALUE>",
    "<P_TEXTVALUE>",
    "<P_BACKTICKINNER>",
    "<P_NAME>",
    "\"WHERE\"",
    "<K_SORT>",
    "\"LIMIT\"",
    "\"WITH\"",
    "\"FROM\"",
    "\"SET\"",
    "\"TABLE\"",
    "\"INTO\"",
    "\"SELECT\"",
    "\"INSERT\"",
    "\"DELETE\"",
    "\"UPDATE\"",
    "\"(\"",
    "\")\"",
    "<K_NOT>",
    "<K_AND>",
    "<K_OR>",
    "<K_ASC>",
    "<K_DESC>",
    "\"INTEGER\"",
    "<K_RANDOM>",
    "\"AS\"",
    "\"COUNT\"",
    "\"SUM\"",
    "\"SPAMANDEGGS\"",
    "\"CONCAT\"",
    "\"<\"",
    "\">\"",
    "\"=\"",
    "\"!=\"",
    "<K_RLIKE>",
    "\"LIKE\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\",\"",
    "\"ISINT\"",
    "\"ISFLOAT\"",
    "<K_ISSTR>",
    "\"ISBOOL\"",
    "<IDNAME>",
    "<QIDNAME>",
    "<FIELDNAME>",
    "<QFIELDNAME>",
    "<TEXTVALUE>",
    "<FLOATVALUE>",
    "<INTVALUE>",
  };

}
